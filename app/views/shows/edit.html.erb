<div class="container">
	<div class="editor-wrapper">
		<div class="canvas-container">
			<svg id="canvas" class="canvas" width="400" height="400">

			</svg>
		</div>
		<div class="info-field">
			<%= form_for @show do |f|%>
				<%= f.hidden_field :id %>
				<%= f.text_field :name, autocomplete:"off",placeholder:"type name..." %>
				<%= f.hidden_field :data %>
				<%= f.hidden_field :behavior,{value:"finish_edit"}%>
			<% end %>
			<div id="save-btn" class="lsf-icon finished-btn" title="ok">完成</div>
		</div>
		
	</div>
	<div class="edit-tool">
		<div type="color" class="color-picker" id="color-picker"></div>
		<!-- <div class="mode-switcher">
			<table><tr><td><div class="switch-btn">圖像</div></td><td><div class="switch-btn">動畫</div></td><td><div class="switch-btn">文字</div></td></tr></table>
		</div> -->
	</div>
</div>

<script type="text/javascript">
var length=400;
var length = $("svg.canvas").attr("width");
var size = 10;
var dataset;
var dataArr;
$(document).on('page:change',function(){

	dataset = ShowWidget.convertStrToCodeArr("<%= @show.data %>");
	ShowWidget.generateShow('svg.canvas', 10, dataset);
	ShowWidget.generateAxis('svg.canvas');

	ColorPickerWidget.init();
	MainWidget.init();
});
var ms;
var MainWidget;
MainWidget = {
	settings:{
		//畫筆的模式
		PENCIL_MODE:1,
		LINE_MODE:2,
		FILL_MODE:3,
		currentMode:1,//預設為畫筆模式
		$canvas: $('#canvas')
	},
	init: function(){
		ms = this.settings;
		this.bindUIActions();
	},
	bindUIActions: function(){
		var toggleMouseDown = false;//記錄滑鼠是否被按下
		ms.$canvas.on('mousedown','rect',function(){
			if(ms.currentMode == ms.FILL_MODE){
				ShowWidget.autoFillBlock(ms.$canvas,$(this).attr('data-x'),$(this).attr('data-y'),cs.currentColor);
			}else{
				toggleMouseDown = true;
				$(this).attr("fill",cs.currentColor);
			}
		});
		ms.$canvas.on('mouseover','rect',function(){
			if(toggleMouseDown){
				$(this).attr("fill",cs.currentColor);		
			}
		});
		ms.$canvas.on('mouseup','rect',function(){
			toggleMouseDown = false;
			$(this).attr("fill",cs.currentColor);
			MainWidget.sendDataToServer(ms.$canvas);
		});

		$("#save-btn").click(function() {
			$("#show_data").val(ShowWidget.convertImgToStr(ms.$canvas));
			$("#edit_show_<%=@show.id%>").submit();
		});
	},
	sendDataToServer: function(canvas){
		$.ajax({
			url: "<%= show_path(@show) %>",
			type: "PUT",
			dataType: "JSON",
			data: {data:ShowWidget.convertImgToStr(canvas)}
		});
	}
}


</script>

<script>

	var cs;
	var ColorPickerWidget;

	ColorPickerWidget = {
		settings:{
			
			initialColor:'#02508d',
			currentColor:'',//init currentColor
		},
		init: function(){
			cs = ColorPickerWidget.settings;
			cs.currentColor = cs.initialColor;
			ColorPickerWidget.bindUIActions();
			ColorPickerWidget.initColorPicker();
		},
		bindUIActions: function(){
			
		},
		initColorPicker: function(){
			$('#color-picker').css('background-color',cs.initialColor);
			$("#color-picker").spectrum({
				className: 'color-picker',
			    color: cs.initialColor,
			    preferredFormat: "hex",
			    showInput: true,
			    showPalette: true,
			    clickoutFiresChange: true,
			    showInitial: true,
			    showButtons: false,
			    beforeShow: function(color) {
			    	
				},
			    change: function(color) {
			    	// console.log("change!!");
			    	cs.currentColor = color;
			    	$('#color-picker').css('background-color',color);
				},
				move: function(color) {
					cs.currentColor = color;
			    	$('#color-picker').css('background-color',color);
				}
			});
		}
	}

</script>
<div class="container">
	<div class="editor-wrapper">
		<div class="canvas-container">
			<svg id="canvas" class="canvas" width="400" height="400">

			</svg>
		</div>
		<div class="edit-tool">
			<div type="color" class="color-picker" id="color-picker"></div>
			<div class="mode-switcher">
				<table><tr><td><div class="switch-btn">圖像</div></td><td><div class="switch-btn">動畫</div></td><td><div class="switch-btn">文字</div></td></tr></table>
			</div>
			<button id="save-btn" class="finished-btn">完成</button>
			<!--<%= link_to '完成',show_path(@show,behavior: "finish_edit"),method: :put, id:'save-btn' , class:'finished-btn' %>-->
		</div>
	</div>

	<%= form_for @show do |f|%>
		<%= f.hidden_field :id %>
		<%= f.hidden_field :name %>
		<%= f.hidden_field :data %>
		<%= f.hidden_field :behavior,{value:"finish_edit"}%>
	<% end %>
</div>

<script type="text/javascript">
var length=400;
var length = $("svg.canvas").attr("width");
var size = 10;
var dataset;
$().ready(function(){

	dataset = MainWidget.convertStrToCodeArr("<%= @show.data %>");
	ShowWidget.generateShow('svg.canvas', 10, dataset);
	ShowWidget.generateAxis('svg.canvas');

	ColorPickerWidget.init();
	MainWidget.init();
});
var ms;
var MainWidget;
MainWidget = {
	settings:{
		$canvas: $('#canvas')
	},
	init: function(){
		ms = this.settings;
		this.bindUIActions();
	},
	bindUIActions: function(){
		var toggleMouseDown = false;//記錄滑鼠是否被按下
		ms.$canvas.on('mousedown','rect',function(){
			toggleMouseDown = true;
			$(this).attr("fill",cs.currentColor);
		});
		ms.$canvas.on('mouseover','rect',function(){
			if(toggleMouseDown){
				$(this).attr("fill",cs.currentColor);		
			}
		});
		ms.$canvas.on('mouseup','rect',function(){
			toggleMouseDown = false;
			$(this).attr("fill",cs.currentColor);
			sendDataToServer();
		});
		$("#save-btn").click(function() {
			console.log("!!!");
			$("#show_data").val(MainWidget.convertImgToStr());
			$("#edit_show_<%=@show.id%>").submit();
		});
	},
	convertStrToCodeArr: function(data) {
		// console.log(data);
		var tempArr = data.slice(1,data.length).split("_");
		var resultArr = [];
		$.each(tempArr,function(index,value){
			var noPrefixArr = value.slice(1,value.length).split("#");
			$.each(noPrefixArr,function(index,value){
				noPrefixArr[index] = "#"+value;
			})
			//console.log(noPrefixArr);
			resultArr.push(noPrefixArr);
		});
		return resultArr;
	},
	convertImgToStr: function(){
		result = "";
		$('#canvas').find('g').each(function(){
			result+="_";
			$(this).find('rect').each(function(){
				var color = $(this).attr('fill');
				result+= color;
			})
		})
		return result;
	},
	convertCodeToImg: function(dataset){
		dataset = [];
		$('#canvas').find('g').each(function() {
			var rowData = [];
			$(this).find('rect').each(function() {
				rowData.push($(this).attr('fill'));
			});
			dataset.push(rowData);
			debugger
		});
	},
	autoFillBlock: function(dataset,x,y,color){
		var showHeight = dataset.length;
		var showWidth = dataset[0].length;
		var topColor = -1;
		var bottomColor = -1;
		var leftColor = -1;
		var rightColor = -1;
		if((x-1)>=0){

		}
		if((x+1>showWidth)){

		}
	}

}







// $('.canvas').on('mouseleave',function(){
// 	toggleMouseDown = false;
// });
//從資料庫出來的show資料轉換成js array
// function convertStrToCodeArr(data){
// 	// console.log(data);
// 	var tempArr = data.slice(1,data.length).split("_");
// 	var resultArr = [];
// 	$.each(tempArr,function(index,value){
// 		var noPrefixArr = value.slice(1,value.length).split("#");
// 		$.each(noPrefixArr,function(index,value){
// 			noPrefixArr[index] = "#"+value;
// 		})
// 		//console.log(noPrefixArr);
// 		resultArr.push(noPrefixArr);
// 	});
// 	return resultArr;
// }
// function convertImgToStr(){
// 	result = "";
// 	$('#canvas').find('g').each(function(){
// 		result+="_";
// 		$(this).find('rect').each(function(){
// 			var color = $(this).attr('fill');
// 			result+= color;
// 		})
// 	})
// 	return result;
// }
// var convertCodeToImg = function(dataset){
// 	dataset = [];
// 	$('#canvas').find('g').each(function() {
// 		var rowData = [];
// 		$(this).find('rect').each(function() {
// 			rowData.push($(this).attr('fill'));
// 		});
// 		dataset.push(rowData);
// 		debugger
// 	});
// }

var autoFillBlock = function(dataset,x,y,color){
	var showHeight = dataset.length;
	var showWidth = dataset[0].length;
	var topColor = -1;
	var bottomColor = -1;
	var leftColor = -1;
	var rightColor = -1;
	if((x-1)>=0){

	}
	if((x+1>showWidth)){

	}
}
function sendDataToServer() {
	$.ajax({
		url: "<%= show_path(@show) %>",
		type: "PUT",
		dataType: "JSON",
		data: {data:MainWidget.convertImgToStr()}
	});
};

$("#save-btn").click(function(){
	sendDataToServer();
});


</script>

<script>

	var cs;
	var ColorPickerWidget;

	ColorPickerWidget = {
		settings:{
			//畫筆的模式
			PENCIL_MODE:1,
			LINE_MODE:2,
			FILL_MODE:3,
			initialColor:'#02508d',
			currentColor:'',//init currentColor
		},
		init: function(){
			cs = ColorPickerWidget.settings;
			cs.currentColor = cs.initialColor;
			ColorPickerWidget.bindUIActions();
			ColorPickerWidget.initColorPicker();
		},
		bindUIActions: function(){
			
		},
		initColorPicker: function(){
			$('#color-picker').css('background-color',cs.initialColor);
			$("#color-picker").spectrum({
				className: 'color-picker',
			    color: cs.initialColor,
			    preferredFormat: "hex",
			    showInput: true,
			    showPalette: true,
			    clickoutFiresChange: true,
			    showInitial: true,
			    showButtons: false,
			    beforeShow: function(color) {
			    	
				},
			    change: function(color) {
			    	// console.log("change!!");
			    	cs.currentColor = color;
			    	$('#color-picker').css('background-color',color);
				},
				move: function(color) {
					cs.currentColor = color;
			    	$('#color-picker').css('background-color',color);
				}
			});
		}
	}

</script>
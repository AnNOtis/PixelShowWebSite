<div class="container">
	<div class="editor-wrapper">
		<div class="canvas-container">
			<svg id="canvas" class="canvas" width="400" height="400">

			</svg>
		</div>
		<div class="info-field">
			<%= form_for @show do |f|%>
				<%= f.hidden_field :id %>
				<%= f.text_field :name, autocomplete:"off",placeholder:"type name..." %>
				<%= f.hidden_field :data %>
				<%= f.hidden_field :behavior,{value:"finish_edit"}%>
			<% end %>
			<div id="save-btn" class="lsf-icon finished-btn" title="ok">完成</div>
		</div>
		
	</div>
	<div class="edit-tool">
		<div type="color" class="color-picker" id="color-picker"></div>
		<!-- <div class="mode-switcher">
			<table><tr><td><div class="switch-btn">圖像</div></td><td><div class="switch-btn">動畫</div></td><td><div class="switch-btn">文字</div></td></tr></table>
		</div> -->
		
		<!--<%= link_to '完成',show_path(@show,behavior: "finish_edit"),method: :put, id:'save-btn' , class:'finished-btn' %>-->
	</div>
</div>

<script type="text/javascript">
var length=400;
var length = $("svg.canvas").attr("width");
var size = 10;
var dataset;
var dataArr;
$().ready(function(){

	dataset = MainWidget.convertStrToCodeArr("<%= @show.data %>");
	ShowWidget.generateShow('svg.canvas', 10, dataset);
	ShowWidget.generateAxis('svg.canvas');

	ColorPickerWidget.init();
	MainWidget.init();
});
var ms;
var MainWidget;
MainWidget = {
	settings:{
		$canvas: $('#canvas')
	},
	init: function(){
		ms = this.settings;
		this.bindUIActions();
	},
	bindUIActions: function(){
		var toggleMouseDown = false;//記錄滑鼠是否被按下
		ms.$canvas.on('mousedown','rect',function(){
			if(cs.currentMode == cs.FILL_MODE){
				MainWidget.autoFillBlock($(this).attr('data-x'),$(this).attr('data-y'),cs.currentColor);
			}else{
				toggleMouseDown = true;
				$(this).attr("fill",cs.currentColor);
			}
		});
		ms.$canvas.on('mouseover','rect',function(){
			if(toggleMouseDown){
				$(this).attr("fill",cs.currentColor);		
			}
		});
		ms.$canvas.on('mouseup','rect',function(){
			toggleMouseDown = false;
			$(this).attr("fill",cs.currentColor);
			sendDataToServer();
		});
		$("#save-btn").click(function() {
			$("#show_data").val(MainWidget.convertImgToStr());
			$("#edit_show_<%=@show.id%>").submit();
		});
	},
	convertStrToCodeArr: function(data) {
		// console.log(data);
		var tempArr = data.slice(1,data.length).split("_");
		var resultArr = [];
		$.each(tempArr,function(index,value){
			var noPrefixArr = value.slice(1,value.length).split("#");
			$.each(noPrefixArr,function(index,value){
				noPrefixArr[index] = "#"+value;
			})
			//console.log(noPrefixArr);
			resultArr.push(noPrefixArr);
		});
		return resultArr;
	},
	convertImgToStr: function(){
		result = "";
		$('#canvas').find('g').each(function(){
			result+="_";
			$(this).find('rect').each(function(){
				var color = $(this).attr('fill');
				result+= color;
			})
		})
		return result;
	},
	convertImgToArr: function(){
		var result = [];
		$('#canvas').find('g').each(function(){
			var rowArr = []
			$(this).find('rect').each(function(){
				var color = $(this).attr('fill');
				rowArr.push(color);
			})
			result.push(rowArr);
		})
		return result;
	},
	convertCodeToImg: function(dataset){
		dataset = [];
		$('#canvas').find('g').each(function() {
			var rowData = [];
			$(this).find('rect').each(function() {
				rowData.push($(this).attr('fill'));
			});
			dataset.push(rowData);
			debugger
		});
	},
	autoFillBlock: function(x,y,fillColor){
		// dataset = MainWidget.convertStrToCodeArr(MainWidget.convertImgToStr());
		// MainWidget.calFillBlock(x,y,fillColor);
		// console.log("!!!!");
		// ShowWidget.generateShow('svg.canvas', 10, dataset);
		x = parseInt(x);
		y = parseInt(y);
		dataArr = MainWidget.convertImgToArr();
		var preColor = dataArr[y][x];
		MainWidget.calFillBlock(x,y,preColor,fillColor);
		ShowWidget.generateShow('#canvas',10,dataArr);
		ShowWidget.generateAxis('#canvas');
		sendDataToServer();
	},
	calFillBlock: function(x,y,preColor,fillColor){
		console.log('x:'+x+'y:'+y);
		if(x<0||x>(dataArr.length-1)||y<0||y>(dataArr[0].length-1)){
			// console.log('1')
			return;
		}
		var currentColor = dataArr[y][x];
		if(dataArr[y][x]==fillColor){
			// console.log('2')
			return;
		}
		if(preColor!=dataArr[y][x]){
			// console.log('3')
			return;
		}
		dataArr[y][x] = fillColor;
		// setTimeout(function() {},500);
		MainWidget.calFillBlock(x+1,y,currentColor,fillColor);
		MainWidget.calFillBlock(x,y+1,currentColor,fillColor);
		MainWidget.calFillBlock(x-1,y,currentColor,fillColor);
		MainWidget.calFillBlock(x,y-1,currentColor,fillColor);
	}


}



var autoFillBlock = function(x,y,targetColor,replaceColor){
	var showHeight = dataset.length;
	var showWidth = dataset[0].length;
	var topColor = -1;
	var bottomColor = -1;
	var leftColor = -1;
	var rightColor = -1;
	if((x-1)>=0){

	}
	if((x+1>showWidth)){

	}
}
function sendDataToServer() {
	$.ajax({
		url: "<%= show_path(@show) %>",
		type: "PUT",
		dataType: "JSON",
		data: {data:MainWidget.convertImgToStr()}
	});
};

$("#save-btn").click(function(){
	sendDataToServer();
});


</script>

<script>

	var cs;
	var ColorPickerWidget;

	ColorPickerWidget = {
		settings:{
			//畫筆的模式
			PENCIL_MODE:1,
			LINE_MODE:2,
			FILL_MODE:3,
			currentMode:1,//預設為畫筆模式
			initialColor:'#02508d',
			currentColor:'',//init currentColor
		},
		init: function(){
			cs = ColorPickerWidget.settings;
			cs.currentColor = cs.initialColor;
			ColorPickerWidget.bindUIActions();
			ColorPickerWidget.initColorPicker();
		},
		bindUIActions: function(){
			
		},
		initColorPicker: function(){
			$('#color-picker').css('background-color',cs.initialColor);
			$("#color-picker").spectrum({
				className: 'color-picker',
			    color: cs.initialColor,
			    preferredFormat: "hex",
			    showInput: true,
			    showPalette: true,
			    clickoutFiresChange: true,
			    showInitial: true,
			    showButtons: false,
			    beforeShow: function(color) {
			    	
				},
			    change: function(color) {
			    	// console.log("change!!");
			    	cs.currentColor = color;
			    	$('#color-picker').css('background-color',color);
				},
				move: function(color) {
					cs.currentColor = color;
			    	$('#color-picker').css('background-color',color);
				}
			});
		}
	}

</script>